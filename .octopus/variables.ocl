variable "az_location" {
    value "southcentralus" {}
}

variable "DatabaseName" {
    value "oniondb" {
        environment = ["tdd"]
    }

    value "oniondb-uat" {
        description = ""
        environment = ["uat"]
    }

    value "oniondb-prod" {
        description = ""
        environment = ["prod"]
    }
}

variable "DatabaseUser" {
    value "cappsAdmin" {
        environment = ["tdd"]
    }

    value "cappsUAT" {
        description = ""
        environment = ["uat"]
    }

    value "cappsPROD" {
        description = ""
        environment = ["prod"]
    }
}

variable "revisionSuffix" {
    value "#{Octopus.Release.Number}" {
        environment = ["tdd", "uat", "prod"]
    }
}

variable "containerAppURL" {
    value "#{Octopus.Action[Get Container App FQDN].Output.app_fqdn}" {}
}

variable "connection_string" {
    value "#{Octopus.Action[Get DB Connection String].Output.connstring}" {}
}

variable "container_image" {
    value "#{registry_login_server}/churchbulletin.ui:#{Octopus.Release.Number}" {
        environment = ["tdd", "uat", "prod"]
    }
}

variable "registry_login_server" {
    value "onionarchitecturedotnet7containers.azurecr.io" {
        environment = ["tdd", "uat", "prod"]
    }
}

variable "AzureAccount" {
    type = "AzureAccount"

    value "azure-onion-containers" {}
}

variable "DatabaseServer" {
    value "#{DatabaseServerName}.database.windows.net" {
        description = ""
    }
}

variable "container_app_environment_name" {
    value "onion-architecture-dotnet-7-container-apps-#{Octopus.Environment.Name}-cae" {
        description = ""
    }
}

variable "DatabaseAction" {
    value "Update" {}
}

variable "DatabaseEdition" {
    value "Basic" {
        description = ""
    }
}

variable "DatabasePerformanceLevel" {
    value "Basic" {
        description = ""
    }
}

variable "container_app_name" {
    value "uat-ui" {
        description = ""
        environment = ["uat"]
    }

    value "prod-ui" {
        description = ""
        environment = ["prod"]
    }

    value "tdd-ui" {
        description = ""
        environment = ["tdd"]

        prompt {
            description = ""
            label = "Name of the TDD UI container app"
        }
    }
}

variable "az_login_appid" {
    value "#{AzureAccount.Client}" {}
}

variable "az_login_appkey" {
    value "#{AzureAccount.Password}" {}
}

variable "az_login_tenant" {
    value "#{AzureAccount.TenantId}" {}
}

variable "ResourceGroupName" {
    value "onion-architecture-dotnet-7-containers-#{Octopus.Environment.Name}" {
        description = ""
        environment = ["uat", "prod"]
    }

    value "onion-architecture-dotnet-7-containers-#{Octopus.Release.Number}" {
        description = ""
        environment = ["tdd"]

        prompt {
            description = ""
            label = "Name of the TDD resource group"
        }
    }
}

variable "DatabaseServerName" {
    value "#{az_login_appid}-sqlserver-prod" {
        environment = ["prod"]
    }

    value "#{az_login_appid}-sqlserver-uat" {
        environment = ["uat"]
    }

    value "#{az_login_appid}-tdd-#{Octopus.Release.Id | ToLower }" {
        environment = ["tdd"]
    }
}

variable "ContainerAppScaledUpReplicas" {
    value "2" {}
}

variable "ContainerAppScaledUpCPU" {
    value "0.5" {}
}

variable "ContainerAppScaledUpMem" {
    value "1.0" {}
}

variable "DBScaledUpPerformanceLevel" {
    value "S0" {}
}

variable "EmailAlertActionName" {
    value "Email Alert" {}
}

variable "AvailabilityTestName" {
    value "#{container_app_name}-availability-test" {}
}

variable "AppInsightsName" {
    value "#{ResourceGroupName}-Insights" {}
}

variable "LowAvailabilityAlertName" {
    value "#{ResourceGroupName} Low Availability" {}
}

variable "LogAnalyticsWorkspaceName" {
    value "#{Octopus.Environment.Name}-Log-Analytics" {}
}

variable "AutomationAccount" {
    value "#{Octopus.Environment.Name}-#{Octopus.Release.Id | ToLower }-automation" {}
}

variable "webhookName" {
    value "#{ResourceGroupName}-webhook" {}
}

variable "RunbookName" {
    value "OctoRunbook" {}
}

variable "ActionName" {
    value "runRunbook" {}
}

variable "OctoRunbookName" {
    value "Unhealthy app alert" {}
}

variable "azrunbookname" {
    value "octo-runbook" {}
}

variable "EnsureEnvironmentsExist" {
    value "False" {
        environment = ["uat"]
    }

    value "False" {
        environment = ["prod"]
    }
}

variable "OctoInstanceURL" {
    value "https://clearmeasure.octopus.app/" {}
}